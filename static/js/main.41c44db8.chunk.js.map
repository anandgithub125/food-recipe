{"version":3,"sources":["components/Header.js","components/RecipeItem.js","components/Recipes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","search","onInputChange","onSearchClick","className","type","placeholder","value","onChange","onClick","RecipeItem","name","image","ingredientLines","src","map","ingredient","Recipes","recipes","recipe","label","Math","random","App","useState","setSearch","setRecipes","useEffect","getRecipes","a","Axios","get","res","data","hits","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uQAsBeA,EApBA,SAAAC,GAAU,IACbC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAC/B,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAIA,UAAU,YAAd,UACI,sBAAMA,UAAU,iBAAhB,sBADJ,mBAEA,sBAAKA,UAAU,2BAAf,UACI,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,wBACpDC,MAAON,EACPO,SAAUN,IAEd,qBAAKE,UAAU,qBAAf,SACI,wBAAQA,UAAU,eAAeK,QAASN,EAA1C,oCCOLO,EAnBI,SAAAV,GAAU,IACjBW,EAAiCX,EAAjCW,KAAMC,EAA2BZ,EAA3BY,MAAOC,EAAoBb,EAApBa,gBACrB,OAEI,sBAAKT,UAAU,wBAAf,UACI,qBAAKU,IAAKF,EAAOR,UAAU,0CAC3B,qBAAKA,UAAU,YAAf,SACI,6BAAKO,MAET,oBAAIP,UAAU,8BAAd,SACKS,EAAgBE,KAAI,SAAAC,GAAU,OAC3B,oBAAIZ,UAAU,kBAAd,SAAiCY,aCOtCC,EAjBC,SAAAjB,GAAU,IACdkB,EAAYlB,EAAZkB,QACR,OACI,qBAAKd,UAAU,eAAf,SAEQc,EAAQH,KAAI,SAAAI,GAAM,OACd,cAAC,EAAD,CAEIR,KAAMQ,EAAOA,OAAOC,MACpBR,MAAOO,EAAOA,OAAOP,MACrBC,gBAAiBM,EAAOA,OAAON,iBAHV,IAAhBQ,KAAKC,gB,uBCiCnBC,MArCf,WAAgB,IAAD,EACeC,mBAAS,UADxB,mBACNvB,EADM,KACEwB,EADF,OAEiBD,mBAAS,IAF1B,mBAENN,EAFM,KAEGQ,EAFH,KAQbC,qBAAU,WACRC,MACC,IACH,IAAMA,EAAU,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAAN,0CAA6C9B,EAA7C,mBARL,WAQK,oBAPP,uCAMM,OACX+B,EADW,OAGjBN,EAAWM,EAAIC,KAAKC,MAHH,2CAAH,qDAYhB,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,OAAQA,EACdC,cAVgB,SAAAiC,GACpBV,EAAUU,EAAEC,OAAO7B,QAUfJ,cARgB,SAAAgC,GACpBP,OASE,qBAAKxB,UAAU,YAAf,SACE,cAAC,EAAD,CAASc,QAASA,UCxBXmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDZ,M","file":"static/js/main.41c44db8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = props => {\r\n    const { search, onInputChange, onSearchClick } = props;\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-1\">\r\n                <span className=\"material-icons\">fastfood</span> Food Recipes</h1>\r\n            <div className=\"input-group w-50 mx-auto\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search Your Recipe...\"\r\n                    value={search}\r\n                    onChange={onInputChange}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-dark\" onClick={onSearchClick}>Search Recipe</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst RecipeItem = props => {\r\n    const { name, image, ingredientLines } = props;\r\n    return (\r\n\r\n        <div className=\"card py-2 text-center\">\r\n            <img src={image} className=\"img-fluid w-50 mx-auto rounded-circle\" />\r\n            <div className=\"card-body\">\r\n                <h5>{name}</h5>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n                {ingredientLines.map(ingredient => (\r\n                    <li className=\"list-group-item\">{ingredient}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default RecipeItem;","import React from \"react\";\r\nimport RecipeItem from \"./RecipeItem\";\r\n\r\nconst Recipes = props => {\r\n    const { recipes } = props;\r\n    return (\r\n        <div className=\"card-columns\">\r\n            {\r\n                recipes.map(recipe => (\r\n                    <RecipeItem\r\n                        key={Math.random() * 100}\r\n                        name={recipe.recipe.label}\r\n                        image={recipe.recipe.image}\r\n                        ingredientLines={recipe.recipe.ingredientLines}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Recipes;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Recipes from \"./components/Recipes\";\nimport Axios from \"axios\";\nimport { data } from 'browserslist';\nfunction App() {\n  const [search, setSearch] = useState(\"chiken\");\n  const [recipes, setRecipes] = useState([]);\n\n  const APP_ID = \"800a3881\";\n  const APP_KEY =\n    `f05493108683bd5456b0c3eb52f2feb5\t`;\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n  const getRecipes = async () => {\n    const res = await Axios.get(`https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n\n    setRecipes(res.data.hits);\n  };\n  const onInputChange = e => {\n    setSearch(e.target.value);\n  };\n  const onSearchClick = e => {\n    getRecipes();\n  };\n\n  return (\n    <div className=\"App\">\n      <Header search={search}\n        onInputChange={onInputChange}\n        onSearchClick={onSearchClick}\n      />\n      <div className=\"container\">\n        <Recipes recipes={recipes} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}